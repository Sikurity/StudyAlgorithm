#include <cstdio>
#include <cstring>
using namespace std;

const int MAXD = 200, MAXL = 20, dr[] = {-1,0,1,0}, dc[] = {0,1,0,-1};

int R, C, L, er, ec, visited[MAXD][MAXD][4][MAXL];

char maze[MAXD][MAXD+1], program[MAXL+1];

bool check(int r, int c)
{
	return r >= 0 && r < R && c >= 0 && c < C && maze[r][c] != 'X';
}

int go(int r, int c, int d, int l)
{
	if (r == er && c == ec) 
		return 1;
	
	int &result = visited[r][c][d][l];

	if (result != -1) 
		return result;
	
	result = 0;

	int ll = (l+1)%L;

	if (program[l] == 'S')
	{
		int rr = r+dr[d], cc = c+dc[d];

		if (check(rr, cc))
			return result = go(rr, cc, d, ll);
		else
			return result = go(r, c, d, ll);
	}
	else if (program[l] == 'R')
		return result = go(r, c, (d+1)&3, ll);
	else if (program[l] == 'L')
		return result = go(r, c, (d+3)&3, ll);
}

int main()
{
	FILE *in, *out;

	in = fopen("input.txt", "r+");
	out = fopen("output.txt", "w");

	while (true)
	{
		if(fscanf(in, "%d%d", &R, &C) != 2)
			break;

		for (int i = 0; i < R; ++i)
		{
			fscanf(in, "%s", maze[i]);
			
			for (int j = 0; j < C; ++j)
				if (maze[i][j] == 'E')
					er = i, ec = j;
		}

		fscanf(in, "%d %s", &L, program);

		memset(visited, -1, sizeof(visited));

		int ok = 0, total = 0;

		for (int i = 0 ; i < R ; ++i)
			for (int j = 0 ; j < C ; ++j)
				if (maze[i][j] != 'X')
				{
					total += 1;
					ok += go(i, j, 0, 0);
				}
				if (ok == total) fprintf(out, "OK\n");
				else fprintf(out, "%d\n", ok);
	}

	return 0;
}